/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CODEGEN_PREFIX
  #define NAMESPACE_CONCAT(NS, ID) _NAMESPACE_CONCAT(NS, ID)
  #define _NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) single_track_model_impl_ode_fun_jac_x_xdot_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int int
#endif

/* Add prefix to internal symbols */
#define casadi_copy CASADI_PREFIX(copy)
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_fill CASADI_PREFIX(fill)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_s3 CASADI_PREFIX(s3)
#define casadi_s4 CASADI_PREFIX(s4)
#define casadi_s5 CASADI_PREFIX(s5)
#define casadi_s6 CASADI_PREFIX(s6)
#define casadi_s7 CASADI_PREFIX(s7)
#define casadi_s8 CASADI_PREFIX(s8)
#define casadi_s9 CASADI_PREFIX(s9)
#define casadi_trans CASADI_PREFIX(trans)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

static const casadi_int casadi_s0[9] = {0, 3, 6, 12, 18, 23, 24, 25, 26};
static const casadi_int casadi_s1[4] = {1, 4, 10, 16};
static const casadi_int casadi_s2[4] = {2, 5, 11, 17};
static const casadi_int casadi_s3[4] = {7, 13, 19, 22};
static const casadi_int casadi_s4[40] = {10, 10, 0, 0, 1, 5, 9, 13, 17, 20, 23, 25, 27, 0, 0, 2, 3, 4, 0, 2, 3, 4, 1, 2, 3, 4, 2, 3, 4, 5, 2, 3, 4, 2, 3, 4, 6, 8, 7, 9};
static const casadi_int casadi_s5[40] = {10, 10, 0, 3, 4, 10, 16, 22, 23, 24, 25, 26, 27, 1, 2, 3, 4, 2, 3, 4, 5, 6, 7, 2, 3, 4, 5, 6, 7, 2, 3, 4, 5, 6, 7, 5, 8, 9, 8, 9};
static const casadi_int casadi_s6[23] = {10, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
static const casadi_int casadi_s7[14] = {10, 1, 0, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
static const casadi_int casadi_s8[7] = {3, 1, 0, 3, 0, 1, 2};
static const casadi_int casadi_s9[5] = {1, 1, 0, 1, 0};

void casadi_copy(const casadi_real* x, casadi_int n, casadi_real* y) {
  casadi_int i;
  if (y) {
    if (x) {
      for (i=0; i<n; ++i) *y++ = *x++;
    } else {
      for (i=0; i<n; ++i) *y++ = 0.;
    }
  }
}

void casadi_fill(casadi_real* x, casadi_int n, casadi_real alpha) {
  casadi_int i;
  if (x) {
    for (i=0; i<n; ++i) *x++ = alpha;
  }
}

void casadi_trans(const casadi_real* x, const casadi_int* sp_x, casadi_real* y,
    const casadi_int* sp_y, casadi_int* tmp) {
  casadi_int ncol_x, nnz_x, ncol_y, k;
  const casadi_int* row_x, *colind_y;
  ncol_x = sp_x[1];
  nnz_x = sp_x[2 + ncol_x];
  row_x = sp_x + 2 + ncol_x+1;
  ncol_y = sp_y[1];
  colind_y = sp_y+2;
  for (k=0; k<ncol_y; ++k) tmp[k] = colind_y[k];
  for (k=0; k<nnz_x; ++k) {
    y[tmp[row_x[k]]++] = x[k];
  }
}

/* single_track_model_impl_ode_fun_jac_x_xdot:(i0[10],i1[10],i2[3],i3)->(o0[10],o1[10x10,27nz],o2[10x10,10nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, void* mem) {
  casadi_int i;
  casadi_real *rr, *ss;
  const casadi_int *cii;
  const casadi_real *cs;
  casadi_real *w0=w+0, *w1=w+10, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15, w16, w17, w18, w19, w20, w21, w22, w23, w24, w25, w26, w27, w28, w29, w30, w31, w32, w33, w34, w35, w36, w37, w38, w39, w40, w41, w42, w43, w44, w45, w46, w47, w48, w49, w50, w51, w52, w53, *w54=w+72, w55, w56, w57, w58, *w59=w+79, *w61=w+106, *w62=w+115, *w68=w+124, *w69=w+128, *w71=w+132, *w72=w+135;
  /* #0: @0 = input[1][0] */
  casadi_copy(arg[1], 10, w0);
  /* #1: @1 = input[0][0] */
  casadi_copy(arg[0], 10, w1);
  /* #2: @2 = @1[2] */
  for (rr=(&w2), ss=w1+2; ss!=w1+3; ss+=1) *rr++ = *ss;
  /* #3: @3 = @1[3] */
  for (rr=(&w3), ss=w1+3; ss!=w1+4; ss+=1) *rr++ = *ss;
  /* #4: @4 = @1[1] */
  for (rr=(&w4), ss=w1+1; ss!=w1+2; ss+=1) *rr++ = *ss;
  /* #5: @4 = (@3+@4) */
  w4  = (w3+w4);
  /* #6: @5 = sin(@4) */
  w5 = sin( w4 );
  /* #7: @6 = (@2*@5) */
  w6  = (w2*w5);
  /* #8: @7 = @1[4] */
  for (rr=(&w7), ss=w1+4; ss!=w1+5; ss+=1) *rr++ = *ss;
  /* #9: @8 = 0.288184 */
  w8 = 2.8818443804034583e-01;
  /* #10: @9 = 3.47 */
  w9 = 3.4700000000000002e+00;
  /* #11: @10 = @1[5] */
  for (rr=(&w10), ss=w1+5; ss!=w1+6; ss+=1) *rr++ = *ss;
  /* #12: @9 = (@9*@10) */
  w9 *= w10;
  /* #13: @11 = @1[6] */
  for (rr=(&w11), ss=w1+6; ss!=w1+7; ss+=1) *rr++ = *ss;
  /* #14: @12 = cos(@11) */
  w12 = cos( w11 );
  /* #15: @13 = @1[7] */
  for (rr=(&w13), ss=w1+7; ss!=w1+8; ss+=1) *rr++ = *ss;
  /* #16: @14 = cos(@13) */
  w14 = cos( w13 );
  /* #17: @12 = (@12+@14) */
  w12 += w14;
  /* #18: @9 = (@9/@12) */
  w9 /= w12;
  /* #19: @14 = (@11-@3) */
  w14  = (w11-w3);
  /* #20: @15 = cos(@14) */
  w15 = cos( w14 );
  /* #21: @16 = (@9*@15) */
  w16  = (w9*w15);
  /* #22: @17 = (@13-@3) */
  w17  = (w13-w3);
  /* #23: @18 = cos(@17) */
  w18 = cos( w17 );
  /* #24: @19 = (@9*@18) */
  w19  = (w9*w18);
  /* #25: @16 = (@16+@19) */
  w16 += w19;
  /* #26: @19 = 5 */
  w19 = 5.;
  /* #27: @20 = (@11-@3) */
  w20  = (w11-w3);
  /* #28: @21 = 0.15875 */
  w21 = 1.5875000000000000e-01;
  /* #29: @21 = (@21*@7) */
  w21 *= w7;
  /* #30: @21 = (@21/@2) */
  w21 /= w2;
  /* #31: @20 = (@20-@21) */
  w20 -= w21;
  /* #32: @20 = (@19*@20) */
  w20  = (w19*w20);
  /* #33: @22 = (@11-@3) */
  w22  = (w11-w3);
  /* #34: @23 = sin(@22) */
  w23 = sin( w22 );
  /* #35: @24 = (@20*@23) */
  w24  = (w20*w23);
  /* #36: @16 = (@16-@24) */
  w16 -= w24;
  /* #37: @24 = 5 */
  w24 = 5.;
  /* #38: @25 = (@13-@3) */
  w25  = (w13-w3);
  /* #39: @26 = 0.17145 */
  w26 = 1.7144999999999999e-01;
  /* #40: @26 = (@26*@7) */
  w26 *= w7;
  /* #41: @26 = (@26/@2) */
  w26 /= w2;
  /* #42: @25 = (@25+@26) */
  w25 += w26;
  /* #43: @25 = (@24*@25) */
  w25  = (w24*w25);
  /* #44: @27 = (@13-@3) */
  w27  = (w13-w3);
  /* #45: @28 = sin(@27) */
  w28 = sin( w27 );
  /* #46: @29 = (@25*@28) */
  w29  = (w25*w28);
  /* #47: @16 = (@16-@29) */
  w16 -= w29;
  /* #48: @16 = (@8*@16) */
  w16  = (w8*w16);
  /* #49: @29 = (@11-@3) */
  w29  = (w11-w3);
  /* #50: @30 = sin(@29) */
  w30 = sin( w29 );
  /* #51: @31 = (@9*@30) */
  w31  = (w9*w30);
  /* #52: @32 = (@13-@3) */
  w32  = (w13-w3);
  /* #53: @33 = sin(@32) */
  w33 = sin( w32 );
  /* #54: @34 = (@9*@33) */
  w34  = (w9*w33);
  /* #55: @31 = (@31+@34) */
  w31 += w34;
  /* #56: @34 = (@11-@3) */
  w34  = (w11-w3);
  /* #57: @35 = cos(@34) */
  w35 = cos( w34 );
  /* #58: @36 = (@20*@35) */
  w36  = (w20*w35);
  /* #59: @31 = (@31+@36) */
  w31 += w36;
  /* #60: @3 = (@13-@3) */
  w3  = (w13-w3);
  /* #61: @36 = cos(@3) */
  w36 = cos( w3 );
  /* #62: @37 = (@25*@36) */
  w37  = (w25*w36);
  /* #63: @31 = (@31+@37) */
  w31 += w37;
  /* #64: @37 = 3.47 */
  w37 = 3.4700000000000002e+00;
  /* #65: @37 = (@37*@2) */
  w37 *= w2;
  /* #66: @31 = (@31/@37) */
  w31 /= w37;
  /* #67: @38 = (@31-@7) */
  w38  = (w31-w7);
  /* #68: @39 = 21.2224 */
  w39 = 2.1222410865874362e+01;
  /* #69: @40 = 0.15875 */
  w40 = 1.5875000000000000e-01;
  /* #70: @41 = (@40*@9) */
  w41  = (w40*w9);
  /* #71: @42 = sin(@11) */
  w42 = sin( w11 );
  /* #72: @43 = (@41*@42) */
  w43  = (w41*w42);
  /* #73: @44 = 0.17145 */
  w44 = 1.7144999999999999e-01;
  /* #74: @45 = (@44*@9) */
  w45  = (w44*w9);
  /* #75: @46 = sin(@13) */
  w46 = sin( w13 );
  /* #76: @47 = (@45*@46) */
  w47  = (w45*w46);
  /* #77: @43 = (@43-@47) */
  w43 -= w47;
  /* #78: @47 = 0.15875 */
  w47 = 1.5875000000000000e-01;
  /* #79: @48 = (@47*@20) */
  w48  = (w47*w20);
  /* #80: @49 = cos(@11) */
  w49 = cos( w11 );
  /* #81: @50 = (@48*@49) */
  w50  = (w48*w49);
  /* #82: @43 = (@43+@50) */
  w43 += w50;
  /* #83: @50 = 0.17145 */
  w50 = 1.7144999999999999e-01;
  /* #84: @51 = (@50*@25) */
  w51  = (w50*w25);
  /* #85: @52 = cos(@13) */
  w52 = cos( w13 );
  /* #86: @53 = (@51*@52) */
  w53  = (w51*w52);
  /* #87: @43 = (@43-@53) */
  w43 -= w53;
  /* #88: @43 = (@39*@43) */
  w43  = (w39*w43);
  /* #89: @53 = 16.6667 */
  w53 = 1.6666666666666668e+01;
  /* #90: @54 = input[2][0] */
  casadi_copy(arg[2], 3, w54);
  /* #91: @55 = @54[0] */
  for (rr=(&w55), ss=w54+0; ss!=w54+1; ss+=1) *rr++ = *ss;
  /* #92: @55 = (@55-@10) */
  w55 -= w10;
  /* #93: @53 = (@53*@55) */
  w53 *= w55;
  /* #94: @55 = @1[8] */
  for (rr=(&w55), ss=w1+8; ss!=w1+9; ss+=1) *rr++ = *ss;
  /* #95: @10 = @1[9] */
  for (rr=(&w10), ss=w1+9; ss!=w1+10; ss+=1) *rr++ = *ss;
  /* #96: @56 = 20 */
  w56 = 20.;
  /* #97: @57 = @54[1] */
  for (rr=(&w57), ss=w54+1; ss!=w54+2; ss+=1) *rr++ = *ss;
  /* #98: @57 = (@57-@55) */
  w57 -= w55;
  /* #99: @56 = (@56*@57) */
  w56 *= w57;
  /* #100: @57 = 20 */
  w57 = 20.;
  /* #101: @58 = @54[2] */
  for (rr=(&w58), ss=w54+2; ss!=w54+3; ss+=1) *rr++ = *ss;
  /* #102: @58 = (@58-@10) */
  w58 -= w10;
  /* #103: @57 = (@57*@58) */
  w57 *= w58;
  /* #104: @1 = vertcat(@6, @7, @16, @38, @43, @53, @55, @10, @56, @57) */
  rr=w1;
  *rr++ = w6;
  *rr++ = w7;
  *rr++ = w16;
  *rr++ = w38;
  *rr++ = w43;
  *rr++ = w53;
  *rr++ = w55;
  *rr++ = w10;
  *rr++ = w56;
  *rr++ = w57;
  /* #105: @0 = (@0-@1) */
  for (i=0, rr=w0, cs=w1; i<10; ++i) (*rr++) -= (*cs++);
  /* #106: output[0][0] = @0 */
  casadi_copy(w0, 10, res[0]);
  /* #107: @59 = zeros(10x10,27nz) */
  casadi_fill(w59, 27, 0.);
  /* #108: @4 = cos(@4) */
  w4 = cos( w4 );
  /* #109: @6 = (@2*@4) */
  w6  = (w2*w4);
  /* #110: @7 = 1 */
  w7 = 1.;
  /* #111: @16 = 0.15875 */
  w16 = 1.5875000000000000e-01;
  /* #112: @16 = (@16/@2) */
  w16 /= w2;
  /* #113: @16 = (@19*@16) */
  w16  = (w19*w16);
  /* #114: @38 = (@23*@16) */
  w38  = (w23*w16);
  /* #115: @43 = 0.17145 */
  w43 = 1.7144999999999999e-01;
  /* #116: @43 = (@43/@2) */
  w43 /= w2;
  /* #117: @43 = (@24*@43) */
  w43  = (w24*w43);
  /* #118: @53 = (@28*@43) */
  w53  = (w28*w43);
  /* #119: @38 = (@38-@53) */
  w38 -= w53;
  /* #120: @38 = (@8*@38) */
  w38  = (w8*w38);
  /* #121: @53 = -1 */
  w53 = -1.;
  /* #122: @55 = (@36*@43) */
  w55  = (w36*w43);
  /* #123: @10 = (@35*@16) */
  w10  = (w35*w16);
  /* #124: @55 = (@55-@10) */
  w55 -= w10;
  /* #125: @55 = (@55/@37) */
  w55 /= w37;
  /* #126: @53 = (@53+@55) */
  w53 += w55;
  /* #127: @43 = (@50*@43) */
  w43  = (w50*w43);
  /* #128: @43 = (@52*@43) */
  w43  = (w52*w43);
  /* #129: @43 = (-@43) */
  w43 = (- w43 );
  /* #130: @16 = (@47*@16) */
  w16  = (w47*w16);
  /* #131: @16 = (@49*@16) */
  w16  = (w49*w16);
  /* #132: @43 = (@43-@16) */
  w43 -= w16;
  /* #133: @43 = (@39*@43) */
  w43  = (w39*w43);
  /* #134: @60 = 00 */
  /* #135: @16 = 1 */
  w16 = 1.;
  /* #136: @55 = 1 */
  w55 = 1.;
  /* #137: @10 = -20 */
  w10 = -20.;
  /* #138: @56 = -20 */
  w56 = -20.;
  /* #139: @61 = vertcat(@6, @7, @38, @53, @43, @60, @16, @55, @10, @56) */
  rr=w61;
  *rr++ = w6;
  *rr++ = w7;
  *rr++ = w38;
  *rr++ = w53;
  *rr++ = w43;
  *rr++ = w16;
  *rr++ = w55;
  *rr++ = w10;
  *rr++ = w56;
  /* #140: @61 = (-@61) */
  for (i=0, rr=w61, cs=w61; i<9; ++i) *rr++ = (- *cs++ );
  /* #141: @62 = @61[:9] */
  for (rr=w62, ss=w61+0; ss!=w61+9; ss+=1) *rr++ = *ss;
  /* #142: (@59[0, 3, 6, 12, 18, 23, 24, 25, 26] = @62) */
  for (cii=casadi_s0, rr=w59, ss=w62; cii!=casadi_s0+9; ++cii, ++ss) if (*cii>=0) rr[*cii] = *ss;
  /* #143: @60 = 00 */
  /* #144: @26 = (@26/@2) */
  w26 /= w2;
  /* #145: @24 = (@24*@26) */
  w24 *= w26;
  /* #146: @26 = (@28*@24) */
  w26  = (w28*w24);
  /* #147: @21 = (@21/@2) */
  w21 /= w2;
  /* #148: @19 = (@19*@21) */
  w19 *= w21;
  /* #149: @21 = (@23*@19) */
  w21  = (w23*w19);
  /* #150: @26 = (@26-@21) */
  w26 -= w21;
  /* #151: @26 = (@8*@26) */
  w26  = (w8*w26);
  /* #152: @21 = (@35*@19) */
  w21  = (w35*w19);
  /* #153: @6 = (@36*@24) */
  w6  = (w36*w24);
  /* #154: @21 = (@21-@6) */
  w21 -= w6;
  /* #155: @21 = (@21/@37) */
  w21 /= w37;
  /* #156: @6 = 3.47 */
  w6 = 3.4700000000000002e+00;
  /* #157: @31 = (@31/@37) */
  w31 /= w37;
  /* #158: @6 = (@6*@31) */
  w6 *= w31;
  /* #159: @21 = (@21-@6) */
  w21 -= w6;
  /* #160: @47 = (@47*@19) */
  w47 *= w19;
  /* #161: @47 = (@49*@47) */
  w47  = (w49*w47);
  /* #162: @50 = (@50*@24) */
  w50 *= w24;
  /* #163: @50 = (@52*@50) */
  w50  = (w52*w50);
  /* #164: @47 = (@47+@50) */
  w47 += w50;
  /* #165: @47 = (@39*@47) */
  w47  = (w39*w47);
  /* #166: @63 = 00 */
  /* #167: @64 = 00 */
  /* #168: @65 = 00 */
  /* #169: @66 = 00 */
  /* #170: @67 = 00 */
  /* #171: @68 = vertcat(@5, @60, @26, @21, @47, @63, @64, @65, @66, @67) */
  rr=w68;
  *rr++ = w5;
  *rr++ = w26;
  *rr++ = w21;
  *rr++ = w47;
  /* #172: @68 = (-@68) */
  for (i=0, rr=w68, cs=w68; i<4; ++i) *rr++ = (- *cs++ );
  /* #173: @69 = @68[:4] */
  for (rr=w69, ss=w68+0; ss!=w68+4; ss+=1) *rr++ = *ss;
  /* #174: (@59[1, 4, 10, 16] = @69) */
  for (cii=casadi_s1, rr=w59, ss=w69; cii!=casadi_s1+4; ++cii, ++ss) if (*cii>=0) rr[*cii] = *ss;
  /* #175: @2 = (@2*@4) */
  w2 *= w4;
  /* #176: @60 = 00 */
  /* #177: @14 = sin(@14) */
  w14 = sin( w14 );
  /* #178: @4 = (@9*@14) */
  w4  = (w9*w14);
  /* #179: @17 = sin(@17) */
  w17 = sin( w17 );
  /* #180: @5 = (@9*@17) */
  w5  = (w9*w17);
  /* #181: @4 = (@4+@5) */
  w4 += w5;
  /* #182: @5 = -5 */
  w5 = -5.;
  /* #183: @26 = (@5*@23) */
  w26  = (w5*w23);
  /* #184: @22 = cos(@22) */
  w22 = cos( w22 );
  /* #185: @21 = (@20*@22) */
  w21  = (w20*w22);
  /* #186: @26 = (@26-@21) */
  w26 -= w21;
  /* #187: @4 = (@4-@26) */
  w4 -= w26;
  /* #188: @26 = -5 */
  w26 = -5.;
  /* #189: @21 = (@26*@28) */
  w21  = (w26*w28);
  /* #190: @27 = cos(@27) */
  w27 = cos( w27 );
  /* #191: @47 = (@25*@27) */
  w47  = (w25*w27);
  /* #192: @21 = (@21-@47) */
  w21 -= w47;
  /* #193: @4 = (@4-@21) */
  w4 -= w21;
  /* #194: @4 = (@8*@4) */
  w4  = (w8*w4);
  /* #195: @32 = cos(@32) */
  w32 = cos( w32 );
  /* #196: @21 = (@9*@32) */
  w21  = (w9*w32);
  /* #197: @21 = (-@21) */
  w21 = (- w21 );
  /* #198: @29 = cos(@29) */
  w29 = cos( w29 );
  /* #199: @47 = (@9*@29) */
  w47  = (w9*w29);
  /* #200: @21 = (@21-@47) */
  w21 -= w47;
  /* #201: @5 = (@5*@35) */
  w5 *= w35;
  /* #202: @34 = sin(@34) */
  w34 = sin( w34 );
  /* #203: @47 = (@20*@34) */
  w47  = (w20*w34);
  /* #204: @5 = (@5+@47) */
  w5 += w47;
  /* #205: @21 = (@21+@5) */
  w21 += w5;
  /* #206: @26 = (@26*@36) */
  w26 *= w36;
  /* #207: @3 = sin(@3) */
  w3 = sin( w3 );
  /* #208: @5 = (@25*@3) */
  w5  = (w25*w3);
  /* #209: @26 = (@26+@5) */
  w26 += w5;
  /* #210: @21 = (@21+@26) */
  w21 += w26;
  /* #211: @21 = (@21/@37) */
  w21 /= w37;
  /* #212: @26 = -0.79375 */
  w26 = -7.9374999999999996e-01;
  /* #213: @26 = (@26*@49) */
  w26 *= w49;
  /* #214: @5 = -0.85725 */
  w5 = -8.5724999999999996e-01;
  /* #215: @5 = (@5*@52) */
  w5 *= w52;
  /* #216: @26 = (@26-@5) */
  w26 -= w5;
  /* #217: @26 = (@39*@26) */
  w26  = (w39*w26);
  /* #218: @63 = 00 */
  /* #219: @64 = 00 */
  /* #220: @65 = 00 */
  /* #221: @66 = 00 */
  /* #222: @67 = 00 */
  /* #223: @69 = vertcat(@2, @60, @4, @21, @26, @63, @64, @65, @66, @67) */
  rr=w69;
  *rr++ = w2;
  *rr++ = w4;
  *rr++ = w21;
  *rr++ = w26;
  /* #224: @69 = (-@69) */
  for (i=0, rr=w69, cs=w69; i<4; ++i) *rr++ = (- *cs++ );
  /* #225: @68 = @69[:4] */
  for (rr=w68, ss=w69+0; ss!=w69+4; ss+=1) *rr++ = *ss;
  /* #226: (@59[2, 5, 11, 17] = @68) */
  for (cii=casadi_s2, rr=w59, ss=w68; cii!=casadi_s2+4; ++cii, ++ss) if (*cii>=0) rr[*cii] = *ss;
  /* #227: @60 = 00 */
  /* #228: @63 = 00 */
  /* #229: @2 = 3.47 */
  w2 = 3.4700000000000002e+00;
  /* #230: @2 = (@2/@12) */
  w2 /= w12;
  /* #231: @4 = (@15*@2) */
  w4  = (w15*w2);
  /* #232: @21 = (@18*@2) */
  w21  = (w18*w2);
  /* #233: @4 = (@4+@21) */
  w4 += w21;
  /* #234: @4 = (@8*@4) */
  w4  = (w8*w4);
  /* #235: @21 = (@30*@2) */
  w21  = (w30*w2);
  /* #236: @26 = (@33*@2) */
  w26  = (w33*w2);
  /* #237: @21 = (@21+@26) */
  w21 += w26;
  /* #238: @21 = (@21/@37) */
  w21 /= w37;
  /* #239: @26 = (@40*@2) */
  w26  = (w40*w2);
  /* #240: @26 = (@42*@26) */
  w26  = (w42*w26);
  /* #241: @2 = (@44*@2) */
  w2  = (w44*w2);
  /* #242: @2 = (@46*@2) */
  w2  = (w46*w2);
  /* #243: @26 = (@26-@2) */
  w26 -= w2;
  /* #244: @26 = (@39*@26) */
  w26  = (w39*w26);
  /* #245: @2 = -16.6667 */
  w2 = -1.6666666666666668e+01;
  /* #246: @64 = 00 */
  /* #247: @65 = 00 */
  /* #248: @66 = 00 */
  /* #249: @67 = 00 */
  /* #250: @68 = vertcat(@60, @63, @4, @21, @26, @2, @64, @65, @66, @67) */
  rr=w68;
  *rr++ = w4;
  *rr++ = w21;
  *rr++ = w26;
  *rr++ = w2;
  /* #251: @68 = (-@68) */
  for (i=0, rr=w68, cs=w68; i<4; ++i) *rr++ = (- *cs++ );
  /* #252: @69 = @68[:4] */
  for (rr=w69, ss=w68+0; ss!=w68+4; ss+=1) *rr++ = *ss;
  /* #253: (@59[7, 13, 19, 22] = @69) */
  for (cii=casadi_s3, rr=w59, ss=w69; cii!=casadi_s3+4; ++cii, ++ss) if (*cii>=0) rr[*cii] = *ss;
  /* #254: @60 = 00 */
  /* #255: @63 = 00 */
  /* #256: @12 = (@9/@12) */
  w12  = (w9/w12);
  /* #257: @4 = sin(@11) */
  w4 = sin( w11 );
  /* #258: @4 = (@12*@4) */
  w4  = (w12*w4);
  /* #259: @21 = (@15*@4) */
  w21  = (w15*w4);
  /* #260: @14 = (@9*@14) */
  w14  = (w9*w14);
  /* #261: @21 = (@21-@14) */
  w21 -= w14;
  /* #262: @14 = (@18*@4) */
  w14  = (w18*w4);
  /* #263: @21 = (@21+@14) */
  w21 += w14;
  /* #264: @14 = 5 */
  w14 = 5.;
  /* #265: @23 = (@14*@23) */
  w23  = (w14*w23);
  /* #266: @22 = (@20*@22) */
  w22  = (w20*w22);
  /* #267: @23 = (@23+@22) */
  w23 += w22;
  /* #268: @21 = (@21-@23) */
  w21 -= w23;
  /* #269: @21 = (@8*@21) */
  w21  = (w8*w21);
  /* #270: @23 = (@30*@4) */
  w23  = (w30*w4);
  /* #271: @29 = (@9*@29) */
  w29  = (w9*w29);
  /* #272: @23 = (@23+@29) */
  w23 += w29;
  /* #273: @29 = (@33*@4) */
  w29  = (w33*w4);
  /* #274: @23 = (@23+@29) */
  w23 += w29;
  /* #275: @14 = (@14*@35) */
  w14 *= w35;
  /* #276: @20 = (@20*@34) */
  w20 *= w34;
  /* #277: @14 = (@14-@20) */
  w14 -= w20;
  /* #278: @23 = (@23+@14) */
  w23 += w14;
  /* #279: @23 = (@23/@37) */
  w23 /= w37;
  /* #280: @14 = (@40*@4) */
  w14  = (w40*w4);
  /* #281: @14 = (@42*@14) */
  w14  = (w42*w14);
  /* #282: @20 = cos(@11) */
  w20 = cos( w11 );
  /* #283: @41 = (@41*@20) */
  w41 *= w20;
  /* #284: @14 = (@14+@41) */
  w14 += w41;
  /* #285: @4 = (@44*@4) */
  w4  = (w44*w4);
  /* #286: @4 = (@46*@4) */
  w4  = (w46*w4);
  /* #287: @14 = (@14-@4) */
  w14 -= w4;
  /* #288: @4 = 0.79375 */
  w4 = 7.9374999999999996e-01;
  /* #289: @4 = (@4*@49) */
  w4 *= w49;
  /* #290: @11 = sin(@11) */
  w11 = sin( w11 );
  /* #291: @48 = (@48*@11) */
  w48 *= w11;
  /* #292: @4 = (@4-@48) */
  w4 -= w48;
  /* #293: @14 = (@14+@4) */
  w14 += w4;
  /* #294: @14 = (@39*@14) */
  w14  = (w39*w14);
  /* #295: @64 = 00 */
  /* #296: @65 = 00 */
  /* #297: @66 = 00 */
  /* #298: @67 = 00 */
  /* #299: @70 = 00 */
  /* #300: @54 = vertcat(@60, @63, @21, @23, @14, @64, @65, @66, @67, @70) */
  rr=w54;
  *rr++ = w21;
  *rr++ = w23;
  *rr++ = w14;
  /* #301: @54 = (-@54) */
  for (i=0, rr=w54, cs=w54; i<3; ++i) *rr++ = (- *cs++ );
  /* #302: @71 = @54[:3] */
  for (rr=w71, ss=w54+0; ss!=w54+3; ss+=1) *rr++ = *ss;
  /* #303: (@59[8:26:6] = @71) */
  for (rr=w59+8, ss=w71; rr!=w59+26; rr+=6) *rr = *ss++;
  /* #304: @60 = 00 */
  /* #305: @63 = 00 */
  /* #306: @21 = sin(@13) */
  w21 = sin( w13 );
  /* #307: @12 = (@12*@21) */
  w12 *= w21;
  /* #308: @15 = (@15*@12) */
  w15 *= w12;
  /* #309: @18 = (@18*@12) */
  w18 *= w12;
  /* #310: @17 = (@9*@17) */
  w17  = (w9*w17);
  /* #311: @18 = (@18-@17) */
  w18 -= w17;
  /* #312: @15 = (@15+@18) */
  w15 += w18;
  /* #313: @18 = 5 */
  w18 = 5.;
  /* #314: @28 = (@18*@28) */
  w28  = (w18*w28);
  /* #315: @27 = (@25*@27) */
  w27  = (w25*w27);
  /* #316: @28 = (@28+@27) */
  w28 += w27;
  /* #317: @15 = (@15-@28) */
  w15 -= w28;
  /* #318: @8 = (@8*@15) */
  w8 *= w15;
  /* #319: @30 = (@30*@12) */
  w30 *= w12;
  /* #320: @33 = (@33*@12) */
  w33 *= w12;
  /* #321: @9 = (@9*@32) */
  w9 *= w32;
  /* #322: @33 = (@33+@9) */
  w33 += w9;
  /* #323: @30 = (@30+@33) */
  w30 += w33;
  /* #324: @18 = (@18*@36) */
  w18 *= w36;
  /* #325: @25 = (@25*@3) */
  w25 *= w3;
  /* #326: @18 = (@18-@25) */
  w18 -= w25;
  /* #327: @30 = (@30+@18) */
  w30 += w18;
  /* #328: @30 = (@30/@37) */
  w30 /= w37;
  /* #329: @40 = (@40*@12) */
  w40 *= w12;
  /* #330: @42 = (@42*@40) */
  w42 *= w40;
  /* #331: @44 = (@44*@12) */
  w44 *= w12;
  /* #332: @46 = (@46*@44) */
  w46 *= w44;
  /* #333: @44 = cos(@13) */
  w44 = cos( w13 );
  /* #334: @45 = (@45*@44) */
  w45 *= w44;
  /* #335: @46 = (@46+@45) */
  w46 += w45;
  /* #336: @42 = (@42-@46) */
  w42 -= w46;
  /* #337: @46 = 0.85725 */
  w46 = 8.5724999999999996e-01;
  /* #338: @46 = (@46*@52) */
  w46 *= w52;
  /* #339: @13 = sin(@13) */
  w13 = sin( w13 );
  /* #340: @51 = (@51*@13) */
  w51 *= w13;
  /* #341: @46 = (@46-@51) */
  w46 -= w51;
  /* #342: @42 = (@42-@46) */
  w42 -= w46;
  /* #343: @39 = (@39*@42) */
  w39 *= w42;
  /* #344: @64 = 00 */
  /* #345: @65 = 00 */
  /* #346: @66 = 00 */
  /* #347: @67 = 00 */
  /* #348: @70 = 00 */
  /* #349: @71 = vertcat(@60, @63, @8, @30, @39, @64, @65, @66, @67, @70) */
  rr=w71;
  *rr++ = w8;
  *rr++ = w30;
  *rr++ = w39;
  /* #350: @71 = (-@71) */
  for (i=0, rr=w71, cs=w71; i<3; ++i) *rr++ = (- *cs++ );
  /* #351: @54 = @71[:3] */
  for (rr=w54, ss=w71+0; ss!=w71+3; ss+=1) *rr++ = *ss;
  /* #352: (@59[9:27:6] = @54) */
  for (rr=w59+9, ss=w54; rr!=w59+27; rr+=6) *rr = *ss++;
  /* #353: @72 = @59' */
  casadi_trans(w59,casadi_s5, w72, casadi_s4, iw);
  /* #354: output[1][0] = @72 */
  casadi_copy(w72, 27, res[1]);
  /* #355: @0 = zeros(10x10,10nz) */
  casadi_fill(w0, 10, 0.);
  /* #356: @1 = ones(10x1) */
  casadi_fill(w1, 10, 1.);
  /* #357: (@0[:10] = @1) */
  for (rr=w0+0, ss=w1; rr!=w0+10; rr+=1) *rr = *ss++;
  /* #358: @1 = @0' */
  casadi_trans(w0,casadi_s6, w1, casadi_s6, iw);
  /* #359: output[2][0] = @1 */
  casadi_copy(w1, 10, res[2]);
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int single_track_model_impl_ode_fun_jac_x_xdot(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, void* mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT void single_track_model_impl_ode_fun_jac_x_xdot_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void single_track_model_impl_ode_fun_jac_x_xdot_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int single_track_model_impl_ode_fun_jac_x_xdot_n_in(void) { return 4;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int single_track_model_impl_ode_fun_jac_x_xdot_n_out(void) { return 3;}

extern "C" CASADI_SYMBOL_EXPORT const char* single_track_model_impl_ode_fun_jac_x_xdot_name_in(casadi_int i){
  switch (i) {
    case 0: return "i0";
    case 1: return "i1";
    case 2: return "i2";
    case 3: return "i3";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* single_track_model_impl_ode_fun_jac_x_xdot_name_out(casadi_int i){
  switch (i) {
    case 0: return "o0";
    case 1: return "o1";
    case 2: return "o2";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* single_track_model_impl_ode_fun_jac_x_xdot_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s7;
    case 1: return casadi_s7;
    case 2: return casadi_s8;
    case 3: return casadi_s9;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* single_track_model_impl_ode_fun_jac_x_xdot_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s7;
    case 1: return casadi_s4;
    case 2: return casadi_s6;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int single_track_model_impl_ode_fun_jac_x_xdot_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 14;
  if (sz_res) *sz_res = 4;
  if (sz_iw) *sz_iw = 11;
  if (sz_w) *sz_w = 162;
  return 0;
}


